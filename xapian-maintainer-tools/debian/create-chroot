#!/bin/sh
# Create a chroot for a specified Debian or Ubuntu distribution
# suitable for package building.
#
# Copyright (C) 2006,2007 Olly Betts
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA

# Requires these packages installed: dchroot debootstrap dpkg-dev perl

# You can use the new chroot interactively like so:
# sudo dchroot -c etch-i386

CHROOT_BASE_PATH=/chroot

set -e
if [ 1 != $# -a 2 != $# ] ; then
  echo "Usage: $0 DISTRO [arch]"
  echo "e.g. $0 etch i386"
  exit 1
fi

DISTRO=$1

_C=
#if [ sid = "$DISTRO" ] ; then
#  _C=-c
#fi

if [ 2 = $# ] ; then
  DEBIAN_BUILD_ARCH=$2
  export DEBIAN_BUILD_ARCH
  DEBIAN_HOST_ARCH=$2
  export DEBIAN_HOST_ARCH
#  DEBIAN_BUILDARCH=$2
# export DEBIAN_BUILDARCH
fi 

eval "`dpkg-architecture|grep ^DEBIAN_BUILD_ARCH=`"
distro_arch=$DISTRO-$DEBIAN_BUILD_ARCH
chroot_path=$CHROOT_BASE_PATH/$distro_arch

perl -ni -e 'print unless /^\Q'"$distro_arch"'\E\b/' /etc/dchroot.conf

mkdir "$chroot_path"
case $DISTRO in
  sid|woody|sarge|etch|lenny)
    if [ sarge-amd64 = "$distro_arch" ] ; then
      mirror=http://ftp.de.debian.org/debian-amd64/debian
    else
      mirror=http://ftp.de.debian.org/debian
    fi
    # Need to specify --mirror to allow running on Ubuntu.
    debootstrap --variant=buildd --arch $DEBIAN_BUILD_ARCH "$DISTRO" "$chroot_path" "$mirror"
    ;;
  warty|hoary|breezy|dapper|edgy|feisty|gutsy)
    if [ ! -f /usr/lib/debootstrap/scripts/$DISTRO ] ; then
      cat <<END
Your debootstrap installation doesn't know how to bootstrap a $DISTRO chroot.
You can fix this something like this (this works for dapper):

wget http://gb.archive.ubuntu.com/ubuntu/pool/main/d/debootstrap/debootstrap_0.3.3.0ubuntu6_all.deb
ar x debootstrap_0.3.3.0ubuntu6_all.deb data.tar.gz
tar zxvf data.tar.gz ./usr/lib/debootstrap/scripts/$DISTRO
mv -i ./usr/lib/debootstrap/scripts/$DISTRO /usr/lib/debootstrap/scripts
rm data.tar.gz
rm debootstrap_0.3.3.0ubuntu6_all.deb
END
      exit 1
    fi
    debootstrap --variant=buildd --arch $DEBIAN_BUILD_ARCH "$DISTRO" "$chroot_path" http://gb.archive.ubuntu.com/ubuntu
    # Need universe for (e.g.) python 2.1 and 2.2 on breezy
    echo "deb http://gb.archive.ubuntu.com/ubuntu $DISTRO universe" >> "$chroot_path/etc/apt/sources.list"
    ;;
  *)
    echo "Don't know about suite '$DISTRO' yet"
    exit 1
esac

echo "$distro_arch $chroot_path" >> /etc/dchroot.conf

dchroot -c "$distro_arch" -- $_C 'apt-get --force-yes update'
# gnupg is needed for signed packages in newer distros.
dchroot -c "$distro_arch" -- $_C 'apt-get --force-yes install gnupg python'
