dnl Process this file with autoconf to produce a configure script.

dnl Need autoconf 2.50 or later for many features
dnl 2.54 needed for automake 1.6
AC_PREREQ(2.54)
AC_INIT(xapian-bindings, 0.8.0)dnl FIXME: bugreport addr as third argument
AM_INIT_AUTOMAKE
AC_CONFIG_SRCDIR(xapian.i)

AM_CONFIG_HEADER(config.h)

dnl Use libtool to manage our libraries
AC_PROG_LIBTOOL

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CXX

dnl Check for libxapian
XO_LIB_XAPIAN(, AC_MSG_ERROR([Can't find Xapian library]))

AC_ARG_WITH(swig,
  [  --without-swig          disable all bindings which depend on SWIG])
AC_ARG_WITH(python,
  [  --without-python        disable Python bindings])

AC_ARG_WITH(php,
  [  --without-php           disable PHP bindings])

AC_ARG_WITH(tcl,
  [  --without-tcl           disable Java bindings])

AC_ARG_WITH(java,
  [  --without-java          disable Java bindings])

AC_ARG_WITH(guile,
  [  --without-guile         disable Guile bindings])

BINDINGS=

if test no != "$with_swig" ; then
  dnl Check for swig - this does most of the work for the bindings.
  AC_PATH_PROG(SWIG, swig, [])
  if test -z "$SWIG" ; then
    AC_MSG_ERROR([Can't find SWIG utility])
  fi
  dnl Check for swig >= 1.3.14
  dnl James says:
  dnl  1.3.18 -> 1.3.19 was very quick, and 1.3.15 through 1.3.17
  dnl  were mostly bugfixes on 1.3.14, so 1.3.14 might be sufficient. 1.3.12
  dnl  introduced support for C++ namespaces; you need 1.3.14 for overloaded
  dnl  functions (which we use).
  v="`$SWIG -version 2>&1`"
  case "`echo \"$v\"|sed 's/^SWIG Version \([[0-9\.]]*\).*/\1/p;d'`" in
   [1.3.1[4-9]|1.3.[2-9][0-9]|1.3.[1-9][0-9][0-9]*|1.[4-9].*|2.*]) ;;
   *)
     AC_MSG_ERROR([SWIG >= 1.3.14 required (you have $v)]) ;;
  esac

  if test no != "$with_python" ; then
    AC_PATH_PROG(PYTHON, python, [])
    if test -n "$PYTHON" ; then
      dnl SWIG needs Python 1.5 or newer.
      case "`$PYTHON -c 'import sys;print sys.version[[:3]]' 2>/dev/null`" in
      [1.[56789]*|[2-9].*])
	PYTHON_INC="`$PYTHON -c 'import sys;print sys.prefix + "/include/python" + sys.version[[:3]]'`"
	AC_SUBST(PYTHON_INC)
	PYTHON_LIB="`$PYTHON -c 'import sys;print sys.prefix + "/lib/python" + sys.version[[:3]]'`"
	AC_SUBST(PYTHON_LIB)
	BINDINGS="$BINDINGS python" ;;
      esac
    fi
  fi

  if test no != "$with_php" ; then
    AC_PATH_PROG(PHP_CONFIG, php-config, [])
    if test -n "$PHP_CONFIG" ; then
	case "`$PHP_CONFIG --version 2> /dev/null`" in
	4.*)
	    PHPIZE="`$PHP_CONFIG --prefix`/bin/phpize"
	    AC_SUBST(PHPIZE)
	    dnl Try to run "phpize --help" - currently this command exits with
	    dnl status 1 but allow for that changing to the more sensible
	    dnl status 0.  If phpize doesn't exist, or isn't an executable
	    dnl file, the exit status will be something like 126 or 127.
	    $PHPIZE --help >/dev/null 2>&1
	    if test "$?" = 1 -o "$?" = 0 ; then
		BINDINGS="$BINDINGS php4"
	    fi
	    ;;
	*) ;;
	esac
    fi
  fi

  if test no != "$with_tcl" ; then
    AC_PATH_PROG(TCLSH, tclsh, [])
    if test -n "$TCLSH" ;  then
	if `echo 'if {$tcl_version < 8.0 } { exit 1 }'|$TCLSH 2> /dev/null` ; then
	    TCL_LIB="`echo 'puts $tcl_library'|$TCLSH`"
	    AC_SUBST(TCL_LIB)
	    dnl there's no obvious way to get "/usr/include/tcl8.2" directly...
	    TCL_INC="`echo \"$TCL_LIB\"|sed 's!/lib/!/include/!'`"
	    AC_SUBST(TCL_INC)
	    BINDINGS="$BINDINGS tcl8"
	fi
    fi
  fi

  if test no != "$with_guile" ; then
    AC_PATH_PROG(GUILE, guile, [])
    dnl FIXME: uncomment once guile is building again... 
    dnl if test -n "$GUILE" ;  then
	dnl test guile version?
	dnl any paths?
	dnl BINDINGS="$BINDINGS guile"
    dnl fi
  fi
fi

if test no != "$with_java" ; then
  AC_PATH_PROG(JAVA, java, [],
  	[${JAVA_HOME+$JAVA_HOME/bin:}${JDK_HOME+$JDK_HOME/bin:}$PATH])
  AC_PATH_PROG(JAVAC, javac, [],
  	[${JAVA_HOME+$JAVA_HOME/bin:}${JDK_HOME+$JDK_HOME/bin:}$PATH])
  AC_PATH_PROG(JAR, jar, [],
  	[${JAVA_HOME+$JAVA_HOME/bin:}${JDK_HOME+$JDK_HOME/bin:}$PATH])
  if test -n "$JAVA" -a -n "$JAVAC" -a -n "$JAR" ; then
      dnl Eric says:
      dnl  The JNI library *requires* "Java 2", which is 1.2 or better.
      dnl  I've only tested with JDK 1.3 and 1.4 from Sun.
      dnl
      dnl So checking for jni.h presumably checks we have "Java 2"?!
      dnl Note: jni.h #defines JNI_VERSION_1_[124] (but not 3 it seems) - we
      dnl could check for that if we want to check for a particular JDK version...
      AC_CHECK_HEADER(jni.h, [BINDINGS="$BINDINGS java"])
  fi
fi

AC_SUBST(BINDINGS)

AC_CONFIG_FILES([Makefile
 python/Makefile python/docs/Makefile python/docs/examples/Makefile
 php4/Makefile
 java/Makefile java/native/Makefile java/org/Makefile java/org/xapian/Makefile
 java/org/xapian/errors/Makefile java/org/xapian/examples/Makefile
 guile/Makefile
 tcl8/Makefile])
AC_OUTPUT
