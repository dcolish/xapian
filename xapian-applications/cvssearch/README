CVSSearch
=========


INSTALLATION
============

* install the latest release of the sleepycat database from
  http://www.sleepycat.com/download.html  
 
  From the dist/ directory, type

  ./configure --enable-cxx [see Note below]
  make 
  make install 

* install the latest version of omsee from 
  ftp://ftp.omsee.com/pub/unstable/nightly/latest/

  ./configure [see Note below]
  make 
  make install 

* now configure CVSSearch, compile, and install:

  ./configure --bindir=<your cgi-bin directory>
  make
  make install

Note:
* If you do not have root access, then sleepcycat and omsee cannot be installed
  under their default output directory: /usr/local. 

* One solution is to install these two packages in the user home directory by append
  "--prefix=$HOME" to the configure command (not for CVSSearch) and set the following
  environment variable before compiling CVSSearch

* for csh:
  setenv LD_LIBRARY_PATH "$HOME/lib"
  setenv LDFLAGS         "-L$HOME/lib -O3 -Wall"
  setenv CXXFLAGS        "-I$HOME/include -O3 -Wall"
  setenv CFLAGS          "-I$HOME/include -O3 -Wall"
  setenv CPPFLAGS        "-I$HOME/include -O3 -Wall"

  or

* for bash:
  export LD_LIBRARY_PATH="$HOME/lib"
  export LDFLAGS        ="-L$HOME/lib -O3 -Wall"
  export CXXFLAGS       ="-I$HOME/include -O3 -Wall"
  export CFLAGS         ="-I$HOME/include -O3 -Wall"
  export CPPFLAGS       ="-I$HOME/include -O3 -Wall"

Building a CVSSearch Database
=============================

  for csh:
  setenv CVSROOT <ROOT> [ROOT = location of CVS repository]
  setenv CVSDATA <DATA> [DATA = location of CVSSearch database to be built]

  cd <cgi-bin directory>            [ this is necessary because the command cvsbuilddb
                                      uses other programs/scripts that assumes to be
                                      in the same directory as cvsbuilddb ]

  ./cvsbuilddb -f dir.list          [ dir.list is file containing a list of directories 
                                      in CVS repository to index 
                                      ./ is necessary because the cgi-bin directory is usually 
                                      not in the path ]
         or 
                             
  ./cvsbuilddb dir1 dir2            [ dir1 dir2 are directories in CVS repository to index]


Searching a CVSSearch Database
==============================

To search the database, use the URL
   http://<Your Domain Name>/<your cgi-bin dir>/Query.cgi
         
To see how code alignment works, use the URL
   http://<Your Domain Name>/<your cgi-bin dir>/cvscompare.cgi


Advanced Usage:  Multiple CVS Repositories
==========================================
to specify an alternate CVS repository, do:
where NEWCVSROOT

    ./cvsbuilddb -d NEWCVSROOT [-f dir.list] [dir1 dir2]



Security & File Permissions
===========================

* To build the database, you must have read and write access to the repository.
* to use cvscompare.cgi, the userid the server uses to run the cgi-script must also have read/write access.
* to use Query.cgi, There will be a cache directory created under your cgi-bin directory that has public read/write access.



Directory structure
===================

                   $CVSDATA
   +-------------------+----------------------------------+----------...
CVSROOTS              root1                             root2        ...         
            +-----------+------------+                +---+---+
           db          src       dbcontent            db  src dbcontent
        +-----...       +----...                      +   +   +

The CVSROOTS file maps multiple CVSROOT to a directory where the database for that CVSROOT is stored. 
So it looks something like this: 

/home/.../cvsroot        root0
/home/.../another_root   root1
...

db directory: contains omsee and database database files for each projects. e.g. (suppose dir/prject1 is indexed, we have)
db/
    dir_project1.db       contains berkeley databases
    dir_project1.cmt      contains line-comment mappings
    dir_project1.om       contains an omsee database
    dir_project1.om2      contains another omsee database
    dir_project1.offset   contains in the format (relative_file_path index <into the cmt file>^B)
    dir_project1.st       contains statistics for dir/project1

src directory: where source files for this CVSROOT is checked out. e.g.
src/
    dir/
        project1/
            file1.cc
            file2.cc

dbcontent file: contains all the packages built under this root. e.g.
    dir_project1
    dir_project2

FAQ
===

Q) What do I do if I need to move my CVS repository
A) Modify the file $CVSDATA/CVSROOTS and change the old CVSROOT value to the new CVSROOT value

