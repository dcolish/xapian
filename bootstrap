#!/bin/sh
# bootstrap a xapian source tree obtained from CVS to produce a tree like
# you'd get from unpacking the results of "make dist"
#
# Copyright (C) 2002,2003 Olly Betts
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA

trap 'echo "Bootstrap failed"' EXIT
set -e
bison_version="`${BISON-bison} --version|sed 's/.* //;q' 2>/dev/null`"
case "$bison_version" in
1.875)
  echo "Bison 1.875 won't work with Xapian.  Please upgrade to 1.875a or newer,"
  echo "or downgrade to an older version."
  exit 1
  ;;
1.3[5-9]|1.3[5-9][^0-9]*|1.[4-9][0-9]*|1.[1-9][0-9][0-9]*|[2-9]*|1[0-9]*)
  ;; # marvellous - 1.35 or newer
*)
  echo "You must have Bison 1.35 or newer (you appear to have $bison_version)"
  echo "Also avoid Bison 1.875 (1.875a is OK)"
  exit 1
  ;;
esac

srcdir="`echo $0|sed 's![^/]*$!!'`"
# don't try to build xapian-applications/dbtools or xapview - they need work.
# ditto for cvssearch.
modules=
for module in xapian-core xapian-bindings xapian-examples xapian-applications/omega ; do
  d="${srcdir}$module"
  if test -f "$d/configure.in" -o -f "$d/configure.ac" ; then
    echo "Bootstrapping \`$module'"
    ${AUTORECONF-autoreconf} -i "$d"
  fi

  if test xapian-core = "$module" ; then
    if test -d "$d/m4" ; then
      # pass extra option to ACLOCAL so xapian.m4 can be found by other modules
      aclocal_dir="`cd \"$d/m4\" && pwd`"
      ACLOCAL="${ACLOCAL-aclocal} -I $aclocal_dir"
      export ACLOCAL
    fi
  fi
  modules="$modules $module"
done

# generate the top-level configure script
rm -f configure.tmp
cat <<'MIDDLE_OF_CONFIGURE' > configure.tmp
#!/bin/sh
# configure each submodule in a xapian source tree
# Generated by Xapian top-level bootstrap script.
#
# Copyright (C) 2003 Olly Betts
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA

trap 'echo "configure failed"' EXIT
set -e
srcdir_raw="`echo $0|sed 's![^/]*$!!'`"
test -z "$srcdir_raw" && srcdir_raw=.
srcdir="`cd \"$srcdir_raw\" && pwd`"
dirs=
here="`pwd`"
XAPIAN_CONFIG="$here/xapian-core/xapian-config"
export XAPIAN_CONFIG
MIDDLE_OF_CONFIGURE

echo "for d in $modules ; do" >> configure.tmp

cat <<'END_OF_CONFIGURE' >> configure.tmp
  if test -f "$srcdir/$d/configure" ; then
    if test -d "$d" ; then : ; else
      case "$d" in
      xapian-applications/*) test -d xapian-applications || mkdir xapian-applications ;;
      esac
      mkdir "$d"
    fi
    echo "Configuring \`$d'"
    # Use a shared config.cache for speed
    cd "$d" && "$srcdir/$d/configure" --cache-file="$here/config.cache" ${1+"$@"}
    cd "$here"
    dirs="$dirs $d"
  fi
done

rm -f Makefile.tmp
echo "# Makefile generated by $0" > Makefile.tmp
for target in all install uninstall install-strip clean distclean mostlyclean maintainer-clean dist check distcheck ; do
  echo >> Makefile.tmp
  echo "$target:" >> Makefile.tmp
  for d in $dirs ; do
    echo "	cd $d && \$(MAKE) $target" >> Makefile.tmp
  done
  case "$target" in
    distclean|maintainer-clean) echo "	rm -f Makefile configure config.cache" >> Makefile.tmp ;;
  esac
done
mv -f Makefile.tmp Makefile
trap EXIT
echo "Configured successfully - now run \"${MAKE-make}\""
END_OF_CONFIGURE

chmod +x configure.tmp
mv -f configure.tmp configure

trap EXIT
echo "Bootstrapped successfully - now run \"${srcdir}configure\" and \"${MAKE-make}\""
