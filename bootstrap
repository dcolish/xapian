#!/bin/sh
# bootstrap a xapian source tree obtained from CVS to produce a tree like
# you'd get from unpacking the results of "make dist"
#
# Copyright (C) 2002,2003,2004,2005,2006,2007 Olly Betts
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA

trap 'echo "Bootstrap failed"' EXIT
set -e

case `${LIBTOOLIZE-libtoolize} --version` in
"")
  echo "${LIBTOOLIZE-libtoolize} not found"
  exit 1 ;;
"libtoolize (GNU libtool) 1.4.*")
  echo "${LIBTOOLIZE-libtoolize} is from libtool 1.4 which is too old - libtool 1.5 is required."
  echo "If you have both installed, set LIBTOOLIZE to point to the correct version."
  exit 1 ;;
esac

srcdir=`echo "$0"|sed 's![^/]*$!!'`
# Don't try to build xapian-applications/dbtools or xapview - they need work.
# As does cvssearch.
# We no longer snapshot xapian-applications/queryserver - we're overfilling the
# partition and it hasn't seen a check-in for ages.  Also, ixion seems to be
# increasingly loaded and this can't help.
modules=
for module in xapian-core xapian-applications/omega xapian-bindings ; do
  d=${srcdir}$module
  if test -f "$d/configure.in" -o -f "$d/configure.ac" ; then
    echo "Bootstrapping \`$module'"
    test -f "$d/preautoreconf" && "$d/preautoreconf"
    # Use --install as debian's autoconf wrapper uses 2.5X if it sees it
    # (but it doesn't check for -i).
    #
    # Use --force so that we update files if autoconf, automake, or libtool
    # has been upgraded.
    #
    # If we have a custom INSTALL file, preserve it since autoreconf insists on
    # replacing INSTALL with "generic installation instructions" when --force
    # is used.  Be careful to replace it if autoreconf fails.
    if test -f "$d/INSTALL" ; then
      if grep 'generic installation instructions' "$d/INSTALL" ; then
	:
      else
	mv -f "$d/INSTALL" "$d/INSTALL.preserved-by-bootstrap"
      fi
    fi
    autoreconf_rc=
    ${AUTORECONF-autoreconf} --install --force "$d" || autoreconf_rc=$?
    if test -f INSTALL.preserved-by-bootstrap ; then
      mv -f "$d/INSTALL.preserved-by-bootstrap" "$d/INSTALL"
    fi
    if test -n "$autoreconf_rc" ; then
      exit $autoreconf_rc
    fi
    modules="$modules $module"
  fi

  if test xapian-core = "$module" ; then
    if test -d "$d/m4" ; then
      # pass extra option to ACLOCAL so xapian.m4 can be found by other modules
      aclocal_dir=`cd "$d/m4" && pwd`
      ACLOCAL="${ACLOCAL-aclocal} -I $aclocal_dir"
      export ACLOCAL
    fi
  fi
done

# Generate the top-level configure script.
rm -f configure.tmp
cat <<'TOP_OF_CONFIGURE' > configure.tmp
#!/bin/sh
# configure each submodule in a xapian source tree
# Generated by Xapian top-level bootstrap script.
#
# Copyright (C) 2003,2004 Olly Betts
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA

trap 'echo "configure failed"' EXIT
set -e

# Produced escaped version of command suitable for pasting back into sh
cmd=$0
for a ; do
 case $a in
  *[^-A-Za-z0-9_+=:@/.,]*)
   esc_a=`echo "$a"|sed 's!\([^-A-Za-z0-9_+=:@/.,]\)!\\\\\\1!g'`
   cmd="$cmd $esc_a" ;;
  *)
   cmd="$cmd $a" ;;
 esac
done

TOP_OF_CONFIGURE

# Produce an absolute version of srcdir.
srcdir_abs=`cd "${srcdir-.}"&&pwd`
# This section is unquoted so we can substitute variables.
cat <<MIDDLE_OF_CONFIGURE >> configure.tmp
srcdir="$srcdir_abs"
modules="$modules"
MIDDLE_OF_CONFIGURE

cat <<'END_OF_CONFIGURE' >> configure.tmp
dirs=
here=`pwd`
XAPIAN_CONFIG=$here/xapian-core/xapian-config
ACLOCAL="${ACLOCAL-aclocal} -I $srcdir/xapian-core/m4"
for d in $modules ; do
  if test "$here" = "$srcdir" ; then
    configure=./configure
  else
    configure=$srcdir/$d/configure
  fi
  if test -f "$configure" ; then
    if test -d "$d" ; then : ; else
      case $d in
      xapian-applications/*) test -d xapian-applications || mkdir xapian-applications ;;
      esac
      mkdir "$d"
    fi
    echo "Configuring \`$d'"
    # Use a shared config.cache for speed and to save a bit of diskspace.
    if test xapian-core = "$d" ; then
      cd "$d" && "$configure" --enable-maintainer-mode --cache-file="$here/config.cache" ${1+"$@"}
    else
      cd "$d" && "$configure" --enable-maintainer-mode --cache-file="$here/config.cache" XAPIAN_CONFIG="$XAPIAN_CONFIG" ACLOCAL="$ACLOCAL" ${1+"$@"}
    fi
    cd "$here"
    dirs="$dirs $d"
  fi
done

rm -f Makefile.tmp
echo "# Makefile generated by:" > Makefile.tmp
echo "# $cmd" >> Makefile.tmp
for target in all install uninstall install-strip clean distclean mostlyclean maintainer-clean dist check distcheck ; do
  echo >> Makefile.tmp
  echo "$target:" >> Makefile.tmp
  for d in $dirs ; do
    echo "	cd $d && \$(MAKE) $target" >> Makefile.tmp
  done
  case $target in
    distclean|maintainer-clean) echo "	rm -f Makefile configure config.cache" >> Makefile.tmp ;;
  esac
done
mv -f Makefile.tmp Makefile
trap - EXIT
echo "Configured successfully - now run \"${MAKE-make}\""
END_OF_CONFIGURE

chmod +x configure.tmp
mv -f configure.tmp configure

trap - EXIT
echo "Bootstrapped successfully - now run \"./configure\" and \"${MAKE-make}\""
