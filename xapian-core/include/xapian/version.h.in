"// version.h: Define preprocesor symbols for the library version."N
"// If using GCC, also check the C++ ABI version is compatible with that used"N
"// to build the library."N
"//"N
"// Copyright 2002,2004 Olly Betts"N
"//"N
"// This program is free software; you can redistribute it and/or"N
"// modify it under the terms of the GNU General Public License as"N
"// published by the Free Software Foundation; either version 2 of the"N
"// License, or (at your option) any later version."N
"//"N
"// This program is distributed in the hope that it will be useful,"N
"// but WITHOUT ANY WARRANTY; without even the implied warranty of"N
"// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"N
"// GNU General Public License for more details."N
"//"N
"// You should have received a copy of the GNU General Public License"N
"// along with this program; if not, write to the Free Software"N
"// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307"N
"// USA"N
""N
"#ifndef XAPIAN_INCLUDED_VERSION_H"N
"#define XAPIAN_INCLUDED_VERSION_H"N
#ifdef __GNUC__
// When building the library with GCC, generate preprocessor code to check that
// any version of GCC used to build applications has a matching C++ ABI. This
// means that users get a nice explanatory error message rather than a
// confusing link failure (or worse a program which builds but crashes).
// Another benefit is that the check happens near the start of compilation of
// the first source file which uses Xapian in the user's application, rather
// than during the first attempt to link with Xapian.
//
// After preprocessing with "g++ -E" or similar (which will expand macros,
// strip comments such as this block, etc) we remove lines starting with a
// '#', remove blank lines, and collapse multiple spaces.  And we strip out
// double quotes, then replace @ with ", and drop N at the end of a line
// (the purpose of the N is to prevent certain preprocessors from
// concatenating literal strings).
//
// So for lines we want in the output, we quote parts of the line which we
// don't want substituting, and use @ where we really want " in the output.
#define V2(A,B) J2(A,B)
#define J2(A,B) g++ A##.##B
#define V3(A,B,C) J3(A,B,C)
#define J3(A,B,C) g++ A##.##B##.##C
""N
"#ifdef __GNUC__"N
#ifdef __GXX_ABI_VERSION
// GCC 3.1 reports ABI version 100 (same as 3.0), but this should actually have
// been 101!  So use hard-coded version number checks for 3.0 and 3.1.
#if __GNUC__ == 3 && __GNUC_MINOR__ == 0
"#if !(__GNUC__ == 3 && __GNUC_MINOR__ == 0)"N
#elif __GNUC__ == 3 && __GNUC_MINOR__ == 1
"#if !(__GNUC__ == 3 && __GNUC_MINOR__ == 1)"N
#else
"#if !defined(__GXX_ABI_VERSION) || __GXX_ABI_VERSION != "__GXX_ABI_VERSION
#endif
#elif __GNUC__ == 2 && __GNUC_MINOR__ == 96
"#if !(__GNUC__ == 2 && __GNUC_MINOR__ == 96)"N
#else
"#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 96)"N
#endif
"#error The C++ ABI version of compiler you are using does not match"N
"#error that of the compiler used to build the library. The versions"N
"#error must match or your program will not work correctly."N
#ifdef __GNUC_PATCHLEVEL__
"#error The Xapian library was built with "V3(__GNUC__,__GNUC_MINOR__,__GNUC_PATCHLEVEL__)
#else
"#error The Xapian library was built with "V2(__GNUC__,__GNUC_MINOR__)
#endif
"#endif"N
"#endif"N
#endif
""N
"#define XAPIAN_VERSION "VERSION
"#define XAPIAN_MAJOR_VERSION "MAJOR_VERSION
"#define XAPIAN_MINOR_VERSION "MINOR_VERSION
"#define XAPIAN_REVISION "REVISION
""N
"#endif"N
