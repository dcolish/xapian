## Process this file with automake to produce Makefile.in

# Note: we don't want dist tarballs built with docs missing, so for simplicity
# this Makefile.am blindly assumes the tools are in place when "make dist" is
# being run.  For "make all", "make check", etc we carefully skip any docs
# which we don't have the tools to generate.

# FIXME: add "xapian hacker docs" option to build sourcedoc.ps and HTML

HTMLDOCS = index.html install.html intro_ir.html overview.html \
 stemming.html quickstart.html remote.html remote_protocol.html \
 quartzdesign.html matcherdesign.html tests.html scalability.html \
 bm25.html code_structure.html queryparser.html \
 quickstartexpand.cc.html quickstartindex.cc.html quickstartsearch.cc.html

# Files which should be put in the distribution by automake
EXTRA_DIST = mkdoc.pl \
	doxygen_api_conf.in doxygen_full_conf.in \
	$(HTMLDOCS) \
	doxygen_api_header.html_tmpl \
	doxygen_api_footer.html_tmpl \
	doxygen_full_header.html_tmpl \
	doxygen_full_footer.html_tmpl \
	apidoc.ps

# Build API docs with doxygen
all-local: doxygen_api_docs

# Data to install, in the usual automake way
docdatadir   = $(datadir)/doc/@PACKAGE@
docdata_DATA = $(HTMLDOCS) apidoc.ps

dist-hook:
	$(mkinstalldirs) $(distdir)/apidoc
	if test -f apidoc/html/index.html ; then \
	  cp -a apidoc/* $(distdir)/apidoc/ ; \
	else \
	  cp -a $(srcdir)/apidoc/* $(distdir)/apidoc/ ; \
	fi

install-data-local:
	$(mkinstalldirs) $(DESTDIR)$(docdatadir)/apidoc/html
	if test -f apidoc/html/index.html ; then \
	  $(INSTALL_DATA) apidoc/html/* $(DESTDIR)$(docdatadir)/apidoc/html ; \
	else \
	  $(INSTALL_DATA) $(srcdir)/apidoc/html/* $(DESTDIR)$(docdatadir)/apidoc/html ; \
	fi

###############################
# How to clean up local files #
###############################

maintainer-clean-local:
	rm -rf apidoc sourcedoc

################################
# How to uninstall local files #
################################
uninstall-local:
	rm -rf $(DESTDIR)$(docdatadir)/apidoc

MAINTAINERCLEANFILES = doxygen_api_conf doxygen_full_conf \
	code_structure.html apidoc.ps sourcedoc.ps

.PHONY: doxygen_source_docs doxygen_api_docs doxygen_docs

doxygen_source_docs: sourcedoc/html/index.html
doxygen_api_docs: apidoc/html/index.html
doxygen_docs: doxygen_source_docs doxygen_api_docs

doxygen_api_conf: doxygen_api_conf.in $(top_srcdir)/configure.ac
doxygen_full_conf: doxygen_full_conf.in $(top_srcdir)/configure.ac

if MAINTAINER_MODE
# Depend on configure.ac so we rebuild if VERSION changes.
code_structure.html: mkdoc.pl $(top_srcdir)/configure.ac
	$(PERL) $(srcdir)/mkdoc.pl "$(VERSION)" $(top_srcdir) $@

# We use $T instead of $(top_srcdir) in APIDOC_SRC and SOURCEDOC_SRC to keep
# their sizes down.
T=$(top_srcdir)

# docsource.mk is generated by preautoreconf, run by bootstrap prior to
# it running autoreconf.
include docsource.mk

# "make refman.ps" sometimes fails for no obvious reason on the first attempt.
# Repeating the command works, so just do that!
apidoc.ps apidoc/html/index.html: $(APIDOC_SRC) $(srcdir)/doxygen_api_conf \
		$(srcdir)/doxygen_api_header.html_tmpl \
		$(srcdir)/doxygen_api_footer.html_tmpl
	rm -rf apidoc
	top_srcdir=$(top_srcdir) top_builddir=$(top_builddir) $(DOXYGEN) doxygen_api_conf
	cd apidoc/latex && (pool_size=750000 $(MAKE) refman.ps||pool_size=750000 $(MAKE) refman.ps)
	mv apidoc/latex/refman.ps apidoc.ps

# "make refman.ps" sometimes fails for no obvious reason on the first attempt.
# Repeating the command works, so just do that!
sourcedoc.ps sourcedoc/html/index.html: $(SOURCEDOC_SRC) $(APIDOC_SRC) \
		$(srcdir)/doxygen_full_conf \
		$(srcdir)/doxygen_full_header.html_tmpl \
		$(srcdir)/doxygen_full_footer.html_tmpl
	rm -rf sourcedoc
	top_srcdir=$(top_srcdir) top_builddir=$(top_builddir) $(DOXYGEN) doxygen_full_conf
	cd sourcedoc/latex && (pool_size=750000 $(MAKE) refman.ps||pool_size=750000 $(MAKE) refman.ps)
	mv sourcedoc/latex/refman.ps sourcedoc.ps
endif

# We used to do: $(LATEX) "\scrollmode\input" refman.tex
# doxygen does: latex refman.tex
