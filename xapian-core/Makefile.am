## Process this file with automake to produce Makefile.in

if BUILD_BACKEND_REMOTE
check-remote:
	$(MAKE) -C bin check
	$(MAKE) -C tests check-remote

remote_subdirs = net
LIBNET_LA = net/libnet.la
endif

# Order is relevant: when building, tests must be last.
# FIXME: when installing, should we install the xapian-config script and
# xapian.m4 last, in case of failure (disk full for example)?
SUBDIRS = include getopt common \
          api backends matcher languages $(remote_subdirs) \
	  queryparser . testsuite bin examples docs tests

DIST_SUBDIRS = include getopt common \
               api backends matcher languages net \
	       queryparser . bin examples docs testsuite tests

bin_SCRIPTS = xapian-config

CLEANFILES = xapian-config

EXTRA_DIST = ChangeLog ChangeLog.examples HACKING PLATFORMS xapian.spec \
 autoconf/rjb_find_stlport.m4 autoconf/definedir.m4 autoconf/type_socklen_t.m4

# docsources.mk is generated by preautoreconf, run by bootstrap prior to
# it running autoreconf.
include docsource.mk

# xapian.m4 contains the XO_LIB_XAPIAN autoconf macro.
m4datadir = $(datadir)/aclocal
dist_m4data_DATA = m4/xapian.m4

lib_LTLIBRARIES = libxapian.la

# libtool requires at least one source file in a library (due to limitations on
# some operating systems).  Make it a C++ file so that automake knows to link
# the library as C++.
libxapian_la_SOURCES = dummy.cc
EXTRA_libxapian_la_SOURCES =

libxapian_la_LDFLAGS = @XAPIAN_LDFLAGS@ -no-undefined -version-info $(LIBRARY_VERSION_INFO)

# FIXME:
# doesn't really work as we'd hope as we get to play with the mangled symbols
#libxapian_la_LDFLAGS = -export-symbols-regex 'Xapian'

libxapian_la_LIBADD = common/libcommon.la backends/libbackend.la \
 matcher/libmatcher.la languages/liblanguages.la api/libapi.la $(LIBNET_LA) \
 queryparser/libqueryparser.la

dist_man_MANS = xapian-config.1

MAINTAINERCLEANFILES = $(dist_man_MANS)

if MAINTAINER_MODE
CLEANFILES += $(dist_man_MANS)

xapian-config.1: xapian-config
	$(HELP2MAN) -o xapian-config.1 --no-info -S "$(PACKAGE_STRING)" -n "`sed 's/^PROG_DESC=\"\(.*\)\".*/\1/p;d' $(srcdir)/xapian-config`" ./xapian-config
endif
