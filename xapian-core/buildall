#! /bin/sh
# buildall - run everything needed to bootstrap and configure a source tree
# from a CVS checkout.
#
# ----START-LICENCE----
# Copyright 1999,2000,2001 BrightStation PLC
# Copyright 2001 James Aylett
# Copyright 2002 Ananova Ltd
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
# -----END-LICENCE-----

# VERSION="0.19"
# Details of this script
PROGNAME="`echo $0 | sed -e 's#^.*/##'`"

# Little bit of paranoia
test -z "${PROGNAME}" && PROGNAME="[buildall]"

#######################
# Get directory names #
#######################

# Get the source directory, ie the directory
# Don't use dirname in case we haven't got GNU tools
SRCDIR="`echo $0 | sed -e 's#/[^/]*$##'`"
# Be paranoid about not getting SRCDIR
test -z "$SRCDIR" && SRCDIR='.'

BUILDDIR="`pwd`"
# Be paranoid about not getting BUILDDIR
test -z "$BUILDDIR" && BUILDDIR='-'

########################
# Function definitions #
########################

display() {
  # Display arguments, interpreting \n
  # FIXME: Don't assume we have an echo which interprets \n correctly
  echo -e "$@"
}

error() {
  # Display an error message and stop
  display "${PROGNAME}: error: $*" >&2
  exit 1
}

run() {
  # Run a program, stopping if it returns an error condition
  cmd=$1
  shift
  display "${PROGNAME}: running $cmd $*"
  $cmd "$@" || error "in $cmd $*"
}

# Change to srcdir
# Note - we do this before testing for neccessary tools so that scripts which
# guess which autotools version to use have more information available to
# guess with: for example, the Debian autoconf version guessing script looks
# for "configure.ac" as a sign that autoconf 2.50+ is required.
cd "${SRCDIR}"
if test . != "${SRCDIR}" ; then
  display "${PROGNAME}: changed to source directory, `pwd`"
fi

# Check for existence of neccessary tools
display "${PROGNAME}: checking for tools"

ERRMSG=""
case "`autoconf --version|sed 's/.* //;q'`" in
"")
  ERRMSG="${ERRMSG}Maintainer tool autoconf not found\\n" ;;
2.[5-9][0-9]|2.[5-9][0-9][^0-9]*)
  ;;
*)
  ERRMSG="${ERRMSG}Maintainer tool autoconf needs to be at least version 2.50\\n" ;;
esac
case "`automake --version|sed 's/.* //;q' 2>/dev/null`" in
"")
  ERRMSG="${ERRMSG}Maintainer tool automake not found\\n" ;;
0.*|1.[0-4]|1.[0-4][^0-9]*)
  ERRMSG="${ERRMSG}Maintainer tool automake needs to be at least version 1.5\\n" ;;
1.6)
  ERRMSG="${ERRMSG}Maintainer tool automake can't be version 1.6 - use 1.5 or at least 1.6.1\\n" ;;
esac
case "`libtool --version|sed 's/.* //;q' 2>/dev/null`" in
"")
  ERRMSG="${ERRMSG}Maintainer tool libtool not found\\n" ;;
[0].*|1.[0123]|1.[0123][^0-9]*|1.1[012]|1.3|1.3[^0-9]*|1.3.[012]|1.3.[012][^0-9]*)
  ERRMSG="${ERRMSG}Maintainer tool libtool needs to be at least version 1.3.3\\n" ;;
esac
case "`bison --version|sed 's/.* //;q'`" in
"")
  ERRMSG="${ERRMSG}Maintainer tool bison not found\\n" ;;
1.3[5-9]|1.[4-9][0-9]|1.[1-9][0-9][0-9]*|[2-9].*|[1-9][0-9]*)
  ;; # 1.35 or newer
*)
  ERRMSG="${ERRMSG}Maintainer tool bison needs to be at least version 1.35\\n" ;;
esac
test -z "${ERRMSG}" ||\
  error "${ERRMSG}See HACKING for details of developer tools needed"

ERRMSG=""
case "`aclocal --version|sed 's/.* //;q' 2>/dev/null`" in
"")
  ERRMSG="${ERRMSG}Maintainer tool aclocal (part of automake) not found\\n" ;;
0.*|1.[0-4]|1.[0-4][^0-9]*)
  ERRMSG="${ERRMSG}Maintainer tool aclocal needs to be from automake at least version 1.5\\n" ;;
1.6)
  ERRMSG="${ERRMSG}Maintainer tool aclocal can't be from automake version 1.6 - use 1.5 or at least 1.6.1\\n" ;;
esac
case "`autoheader --version|sed 's/.* //;q'`" in
"")
  ERRMSG="${ERRMSG}Maintainer tool autoheader (part of autoconf) not found\\n" ;;
2.[5-9][0-9]|2.[5-9][0-9][^0-9]*)
  ;;
*)
  ERRMSG="${ERRMSG}Maintainer tool autoheader needs to be from autoconf at least version 2.50\\n" ;;
esac
test -z "${ERRMSG}" ||
error "${ERRMSG}See HACKING for details of developer tools needed"

if (exec >/dev/null 2>&1 ; xapian-config --prefix; exit $?) then
  EXTRA_DIR="`xapian-config --prefix`/share/aclocal"
  if test -d "${EXTRA_DIR}" ; then
    ACLOCAL_FLAGS="$ACLOCAL_FLAGS -I $EXTRA_DIR"
  fi
fi

# Build configure script and Makefile.in's
run libtoolize --force --automake
run aclocal $ACLOCAL_FLAGS
run autoheader
run autoconf
run automake --add-missing

# Return to build directory
cd "${BUILDDIR}"
if test . != "${SRCDIR}" ; then
  display "${PROGNAME}: returned to build directory, ${BUILDDIR}"
fi

# Configure package

if test -f config.status && test -z "$*" ; then
  # If no parameters, assume that we just wish to re-run the configure,
  # using same parameters as last time.
  # (Note: make should automatically perform these steps if and when
  # neccessary, but this is useful for situations where make has got
  # confused - for example, when a broken makefile has been created.)
  run ./config.status --recheck
  run ./config.status
else
  run "${SRCDIR}/configure" "$@"
fi
